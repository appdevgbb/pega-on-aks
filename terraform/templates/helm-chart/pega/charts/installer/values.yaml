---
image: "YOUR_IMAGE_NAME"
# Creates a new System and replaces this with default system.Default is pega
systemName: "pega"
# During installations, the system name above is generated with the following production level.Default is 2
# The system production level can be set to one of the below integer values (1-5):
# 5 = production;
# 4 = preproduction;
# 3 = test;
# 2 = development;
# 1 = experimental
productionLevel: 2
# Whether this is a Multitenant System ('true' if yes, 'false' if no)
multitenantSystem: "false"
# UDF generation will be skipped if this property is set to true
bypassUdfGeneration: "true"
# Temporary password for administrator@pega.com that is used to install Pega Platform
adminPassword: ""
# Run the Static Assembler ('true' to run, 'false' to not run)
assembler: ""
# Bypass automatically truncating PR_SYS_UPDATESCACHE . Default is false.
bypassTruncateUpdatescache: "false"
# Distribution kit URL
distributionKitURL: ""
# A manually managed Persistent Volume Claim for mounting distribution kit. Given PVC must be created manually before volume will be bound.
# This as an alternative to distributionKitURL. If both are specified then distributionKitURL will take precedence.
# Only distriubtion kit zip file is expected inside the volume.
distributionKitVolumeClaimName: ""
# Bypass loading engine classes into database.
bypassLoadEngineClasses: "false"
# Bypass loading assembly classes into database
bypassLoadAssembledClasses: "false"
# If 'true', Helm will wait for the install or upgrade to finish, and only succeed if the job completes without error.
waitForJobCompletion: "false"
threads:
  # Maximum Idle Thread.Default is 5
  maxIdle: 5
  # Maximum Wait Thread.Default is -1
  maxWait: -1
  # Maximum Active Thread.Default is 10
  maxActive: 10
zos:
  # Z/OS SITE-SPECIFIC PROPERTIES FILE
  zosProperties: "/opt/pega/config/DB2SiteDependent.properties"
  # Specify the workload manager to load UDFs into db2zos
  db2zosUdfWlm: ""
# Upgrade specific properties
upgrade:
  # Type of upgrade
  # Valid values are 'in-place' , 'out-of-place'
  upgradeType: ""
  # Specify target rules schema for migration and upgrade
  targetRulesSchema: ""
  # The commit count to use when loading database tables
  dbLoadCommitRate: 100
  # Update existing application will be run if this property is set to true
  updateExistingApplications: "false"
  # Runs the Update Applications Schema utility to update the cloned Rule, Data, Work
  # And Work History tables with the schema changes in the latest base tables if this property is set to true
  updateApplicationsSchema: "false"
  # Generate and execute an SQL script to clean old rulesets and their rules from the system if this property is set to true
  runRulesetCleanup: "false"
  # Rebuild Database Rules Indexes after Rules Load to improve Database Access Performance
  rebuildIndexes: "false"

# Memory and CPU settings for installer
resources:
  requests:
    memory: "5Gi"
    cpu: 1
  limits:
    memory: "6Gi"
    cpu: 2
