---
# Enter the number of search nodes for Kubernetes to deploy (minimum 1).
replicas: 1
# IMPORTANT: https://www.elastic.co/guide/en/elasticsearch/reference/current/important-settings.html#minimum_master_nodes
# To prevent data loss, you must configure the discovery.zen.minimum_master_nodes setting so that each master-eligible
# node is set to the minimum number of master-eligible nodes that must be visible in order to form a cluster.
# Configure this value using the formula (n/2) + 1 where n is replica count or desired capacity.
minimumMasterNodes: 1
# If externalURL is set, no search nodes will be deployed automatically, and Pega will use this search node url.
externalURL: "http://pega-search"
# Enter the docker image used to deploy Elasticsearch. This value will be ignored if using an external url.
# Push the Elasticsearch image to your internal docker registry. This must be the same registry as the docker section above.
image: "pegasystems/search"
imagePullPolicy: ""
# Enter the CPU limit for each search node (recommended 1).
cpuLimit: 1
# Enter the Memory limit for each search node (recommended 4Gi).
memLimit: "4Gi"
# Enter the volume size limit for each search node (recommended 5Gi).
volumeSize: "5Gi"
# Specify a user to run as - Default runAsUser is 1000
podSecurityContext:
  runAsUser: 1000
# Elasticsearch requires vm.max_map_count to be configured to an appropriate value.  This may be
# configured manually on your system and if so, you may bypass this privileged init container.
# For more information, see https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html
set_vm_max_map_count: true
# Run a chown command on the mapped volume at startup to reset the owner of the ES data to the
# current user.  This is needed if a random user is used to run the pod, but also requires
# privileges to change the ownership of files.
set_data_owner_on_startup: false
# Additional custom fields, such as environment variables
custom:
  env: []
